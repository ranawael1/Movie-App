{"ast":null,"code":"import axios from 'axios';\nimport { setLoader } from '../Store/actions/loader';\nimport store from \"../Store/store\";\nexport const AxiosInstance = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {}\n}); // Add a request interceptor\n\nAxiosInstance.interceptors.request.use(function (config) {\n  // Do something before request is sent\n  // config[\"params\"]={\n  //     \"api-key\": \"api_key=addc24fa3de68655222e36f0796cadb2\"\n  // }\n  store.dispatch(setLoader(true));\n  return config;\n}, function (error) {\n  // Do something with request error\n  return Promise.reject(error);\n}); // Add a response interceptor\n\nAxiosInstance.interceptors.response.use(function (response) {\n  // Any status code that lie within the range of 2xx cause this function to trigger\n  // Do something with response data\n  store.dispatch(setLoader(false));\n  return response;\n}, function (error) {\n  // Any status codes that falls outside the range of 2xx cause this function to trigger\n  // Do something with response error\n  return Promise.reject(error);\n});","map":{"version":3,"sources":["/home/rana/Desktop/react/apps/movie-app/src/Network/AxiosInstance.js"],"names":["axios","setLoader","store","AxiosInstance","create","baseURL","params","interceptors","request","use","config","dispatch","error","Promise","reject","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACC,OAAO,MAAMC,aAAa,GAAGH,KAAK,CAACI,MAAN,CAAa;AACtCC,EAAAA,OAAO,EAAG,+BAD4B;AAEtCC,EAAAA,MAAM,EAAC;AAF+B,CAAb,CAAtB,C,CAMR;;AACAH,aAAa,CAACI,YAAd,CAA2BC,OAA3B,CAAmCC,GAAnC,CAAuC,UAAUC,MAAV,EAAkB;AACrD;AACA;AACA;AACA;AACAR,EAAAA,KAAK,CAACS,QAAN,CAAeV,SAAS,CAAC,IAAD,CAAxB;AACC,SAAOS,MAAP;AACF,CAPH,EAOK,UAAUE,KAAV,EAAiB;AAClB;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAVH,E,CAYA;;AACAT,aAAa,CAACI,YAAd,CAA2BQ,QAA3B,CAAoCN,GAApC,CAAwC,UAAUM,QAAV,EAAoB;AACxD;AACA;AACAb,EAAAA,KAAK,CAACS,QAAN,CAAeV,SAAS,CAAC,KAAD,CAAxB;AAEA,SAAOc,QAAP;AACD,CANH,EAMK,UAAUH,KAAV,EAAiB;AAClB;AACA;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAVH","sourcesContent":["import axios from 'axios';\nimport { setLoader } from '../Store/actions/loader';\nimport store from \"../Store/store\"\n export const AxiosInstance = axios.create({\n     baseURL : \"https://api.themoviedb.org/3/\",\n     params:{}\n })\n\n\n// Add a request interceptor\nAxiosInstance.interceptors.request.use(function (config) {\n    // Do something before request is sent\n    // config[\"params\"]={\n    //     \"api-key\": \"api_key=addc24fa3de68655222e36f0796cadb2\"\n    // }\n    store.dispatch(setLoader(true))\n     return config;\n  }, function (error) {\n    // Do something with request error\n    return Promise.reject(error);\n  });\n\n// Add a response interceptor\nAxiosInstance.interceptors.response.use(function (response) {\n    // Any status code that lie within the range of 2xx cause this function to trigger\n    // Do something with response data\n    store.dispatch(setLoader(false))\n\n    return response;\n  }, function (error) {\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\n    // Do something with response error\n    return Promise.reject(error);\n  });"]},"metadata":{},"sourceType":"module"}