{"ast":null,"code":"var _jsxFileName = \"/home/rana/Desktop/react/apps/movie-app/src/pages/Signup/Signup.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport InputForm from \"../../components/Input/InputForm\";\nimport \"./Signup.css\";\nimport \"..Login\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Signup(props) {\n  _s();\n\n  const history = useHistory();\n  const [userData, setUserData] = useState({\n    email: null,\n    password: null,\n    confirm: null\n  });\n  const [errors, setErrors] = useState({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    name: \"\",\n    username: \"\",\n    check: true,\n    hide: \"none\" // init: true\n\n  });\n  const emailRegex = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n  const usernameRegex = /\\s/g;\n  const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])/;\n\n  const onChange = e => {\n    if (e.target.id == \"email\") {\n      setUserData({ ...userData,\n        email: e.target.value\n      });\n      setErrors({ ...errors,\n        email: e.target.value.length == 0 ? \"Email is required!\" : !emailRegex.test(e.target.value) ? \"Email address is invalid!\" : null,\n        check: e.target.value.length > 0 && emailRegex.test(e.target.value) && errors.password == null && errors.name == null ? false : true,\n        hide: errors.email != null ? \"none\" : \"hidden\"\n      });\n    } else if (e.target.id == \"password\") {\n      setUserData({ ...userData,\n        password: e.target.value\n      });\n      setErrors({ ...errors,\n        password: e.target.value.length == 0 ? \"Password is required!\" : e.target.value.length < 8 ? \"Password must be 8 or more characters.\" : !passwordRegex.test(e.target.value) ? \"Password must contain at least one uppercase letter, one lowercase letter, one number and one special character\" : null,\n        confirmPassword: e.target.value != userData.confirm ? \"Unmatched password\" : null,\n        check: errors.email == null && e.target.value.length > 0 && e.target.value.length >= 8 && errors.name == null ? false : true,\n        hide: errors.password != null ? \"none\" : \"hidden\"\n      });\n    } else if (e.target.id == \"name\") {\n      setUserData({ ...userData,\n        name: e.target.value\n      });\n      setErrors({ ...errors,\n        name: e.target.value.length == 0 ? \"Name is required!\" : null,\n        check: errors.email == null && errors.password == null && e.target.value.length > 0 ? false : true,\n        hide: errors.name != null ? \"none\" : \"hidden\"\n      });\n    } else if (e.target.id == \"username\") {\n      setUserData({ ...userData,\n        username: e.target.value\n      });\n      setErrors({ ...errors,\n        username: e.target.value.length == 0 ? \"User name is required!\" : usernameRegex.test(e.target.value) ? \"User name must have no spaces\" : null,\n        check: errors.email == null && errors.password == null && e.target.value.length > 0 ? false : true,\n        hide: errors.name != null ? \"none\" : \"hidden\"\n      });\n    } else if (e.target.id == \"confirmPassword\") {\n      setUserData({ ...userData,\n        confirm: e.target.value\n      });\n      setErrors({ ...errors,\n        confirmPassword: e.target.value != userData.password ? \"Unmatched password\" : null,\n        check: errors.email == null && e.target.value.length > 0 && e.target.value.length >= 8 && errors.name == null ? false : true,\n        hide: errors.password != null ? \"none\" : \"hidden\"\n      });\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (!errors.email && !errors.password) {\n      history.push(\"/\");\n      console.log(userData);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"container  loginForm col-10 col-md-5\",\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n        errors: errors.name,\n        type: \"text\",\n        label: \"Name\",\n        id: \"name\",\n        handleChange: e => onChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n        errors: errors.email,\n        type: \"email\",\n        label: \"Email\",\n        id: \"email\",\n        handleChange: e => onChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n        errors: errors.username,\n        type: \"text\",\n        label: \"User Name\",\n        id: \"username\",\n        handleChange: e => onChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n        errors: errors.password,\n        type: \"password\",\n        label: \"Password \",\n        id: \"password\",\n        handleChange: e => onChange(e),\n        hide: errors.hide,\n        eye: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n        errors: errors.confirmPassword,\n        type: \"password\",\n        label: \"Confirm Password \",\n        id: \"confirmPassword\",\n        handleChange: e => onChange(e),\n        hide: errors.hide\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success SignupButton\",\n        name: \"button\",\n        disabled: errors.check || errors.email || errors.password || errors.name || errors.username || errors.confirmPassword,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Signup, \"3AWjNFktPmJQArGdHoJQP3MLbg8=\", false, function () {\n  return [useHistory];\n});\n\n_c = Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/rana/Desktop/react/apps/movie-app/src/pages/Signup/Signup.js"],"names":["useState","InputForm","useHistory","Signup","props","history","userData","setUserData","email","password","confirm","errors","setErrors","confirmPassword","name","username","check","hide","emailRegex","usernameRegex","passwordRegex","onChange","e","target","id","value","length","test","onSubmit","preventDefault","push","console","log"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport InputForm from \"../../components/Input/InputForm\"\nimport \"./Signup.css\"\nimport \"..Login\"\nimport {useHistory} from \"react-router-dom\"\nexport default function Signup (props){\n    const history = useHistory()\n    const [userData, setUserData] = useState({\n        email: null,\n        password: null,\n        confirm : null\n\n    })\n    const [errors, setErrors] = useState({\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        name: \"\",\n        username: \"\",\n        check:true,\n        hide: \"none\"\n        // init: true\n\n    })\n    const emailRegex = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/\n    const usernameRegex = /\\s/g\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])/\n    const onChange = (e) => {\n\n        if (e.target.id == \"email\") {\n            setUserData({\n                ...userData,\n                email: e.target.value\n            })\n            setErrors({\n                ...errors,\n                email: e.target.value.length == 0 ? \"Email is required!\" : !emailRegex.test(e.target.value) ? \"Email address is invalid!\" : null,\n                check: (e.target.value.length > 0 && emailRegex.test(e.target.value) && errors.password==null && errors.name==null) ? false : true,\n                hide: errors.email!=null ? \"none\" : \"hidden\"\n            })\n\n\n        }\n        else if(e.target.id == \"password\"){\n            setUserData({\n                ...userData,\n                password: e.target.value\n            })\n            setErrors({\n                ...errors,\n                password: e.target.value.length == 0 ? \"Password is required!\" : \n                e.target.value.length < 8 ? \"Password must be 8 or more characters.\" : \n                !passwordRegex.test(e.target.value) ? \"Password must contain at least one uppercase letter, one lowercase letter, one number and one special character\": null,\n                confirmPassword: e.target.value!= userData.confirm ? \"Unmatched password\" : null,\n                check: (errors.email==null && e.target.value.length> 0 &&  e.target.value.length >=8 && errors.name==null) ? false : true ,  \n                hide: errors.password!=null ? \"none\" : \"hidden\"   \n\n            })\n        }\n        else if (e.target.id == \"name\"){\n            setUserData({\n                ...userData,\n                name: e.target.value\n            })\n            setErrors({\n                ...errors,\n                name: e.target.value.length == 0 ? \"Name is required!\" :  null,\n                check: (errors.email==null && errors.password==null && e.target.value.length >0) ? false : true ,  \n                hide: errors.name!=null ? \"none\" : \"hidden\"          \n            })\n        }\n        else if(e.target.id == \"username\"){\n            setUserData({\n                ...userData,\n                username: e.target.value\n            })\n            setErrors({\n                ...errors,\n                username: e.target.value.length == 0 ? \"User name is required!\" :  usernameRegex.test(e.target.value)? \"User name must have no spaces\": null,\n                check: (errors.email==null && errors.password==null && e.target.value.length >0) ? false : true ,  \n                hide: errors.name!=null ? \"none\" : \"hidden\"          \n            })\n        }\n        else if(e.target.id == \"confirmPassword\"){\n            setUserData({\n                ...userData,\n                confirm: e.target.value\n            })\n            setErrors({\n                ...errors,\n                confirmPassword: e.target.value!= userData.password ? \"Unmatched password\" : null,\n                check: (errors.email==null && e.target.value.length> 0 &&  e.target.value.length >=8 && errors.name==null) ? false : true ,  \n                hide: errors.password!=null ? \"none\" : \"hidden\"               \n            })\n        }\n        \n        \n\n        \n    }\n    const onSubmit = (e) => {\n        e.preventDefault()\n        if (!errors.email && !errors.password) {\n            history.push(\"/\")\n            console.log(userData)\n            \n        }\n\n    }\n    return(\n        <>\n        <form className=\"container  loginForm col-10 col-md-5\" onSubmit={(e) => onSubmit(e)}>\n                <h1>Registration</h1>\n                <InputForm errors={errors.name} \n                type={\"text\"}\n                label={\"Name\" } \n                id={\"name\"}\n                handleChange={(e)=>onChange(e)}\n                />\n                <InputForm errors={errors.email} \n                type={\"email\"}\n                label={\"Email\" } \n                id={\"email\"}\n                handleChange={(e)=>onChange(e)}\n                />\n                <InputForm errors={errors.username} \n                type={\"text\"}\n                label={\"User Name\" } \n                id={\"username\"}\n                handleChange={(e)=>onChange(e)}\n                />\n                <InputForm errors={errors.password} \n                type={\"password\"}\n                label={\"Password \" } \n                id={\"password\"}\n                handleChange={(e)=>onChange(e)}\n                hide={errors.hide}\n                eye={true}\n                />            \n                <InputForm errors={errors.confirmPassword} \n                type={\"password\"}\n                label={\"Confirm Password \" } \n                id={\"confirmPassword\"}\n                handleChange={(e)=>onChange(e)}\n                hide={errors.hide}\n                />            \n                <br></br>\n                <button type=\"submit\" className=\"btn btn-success SignupButton\" name=\"button\" \n                disabled={errors.check ||\n                 errors.email || \n                 errors.password ||\n                 errors.name ||\n                 errors.username ||\n                 errors.confirmPassword\n                 }>Register</button>\n            </form>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}